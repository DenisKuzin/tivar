# -*- coding: utf-8 -*-
u'''
Обработка связанная с датой и временем
'''

from datetime import date, timedelta

def tuple_to_date(tuples):
    u'''
    Преобразует ((2003, 6, 13), (2003, 5, 14)) в [datetime.date(2003, 6, 13), datetime.date(2003, 5, 14)]
    Не используется Generator Expression т.к. требуется быстро эти данные переварить и сохранить в памяти результат
    '''
    dates = map(lambda current_date: date(*current_date), tuples)
    return dates

days_off = tuple_to_date((
    (2003, 1, 1),
    (2003, 1, 2),
    (2003, 1, 3),
    (2003, 1, 6),
    (2003, 1, 7),
    (2003, 2, 24),
    (2003, 3, 10),
    (2003, 5, 1),
    (2003, 5, 2),
    (2003, 5, 9),
    (2003, 6, 12),
    (2003, 6, 13),
    (2003, 11, 7),
    (2003, 12, 12),
    (2004, 1, 1),
    (2004, 1, 2),
    (2004, 1, 7),
    (2004, 2, 23),
    (2004, 3, 8),
    (2004, 5, 3),
    (2004, 5, 4),
    (2004, 5, 10),
    (2004, 6, 14),
    (2004, 11, 8),
    (2004, 12, 13),
    (2005, 1, 3),
    (2005, 1, 4),
    (2005, 1, 5),
    (2005, 1, 6),
    (2005, 1, 7),
    (2005, 1, 10),
    (2005, 2, 23),
    (2005, 5, 2),
    (2005, 5, 9),
    (2005, 5, 10),
    (2005, 6, 13),
    (2005, 11, 4),
    (2006, 1, 2),
    (2006, 1, 3),
    (2006, 1, 4),
    (2006, 1, 5),
    (2006, 1, 6),
    (2006, 1, 9),
    (2006, 2, 23),
    (2006, 2, 24),
    (2006, 3, 8),
    (2006, 1, 1),
    
))
u'''
Нерабочие дни: праздники и т.п.
'''

work_days = tuple_to_date((
    (2003, 1, 4),
    (2003, 1, 5),
    (2003, 6, 21),
    (2005, 3, 5),
    (2005, 5, 14),
    (2006, 2, 26),
    (2006, 5, 6),
))
u'''
Рабочие дни: перенесенные выходные дни и т.п.
'''

short_days = tuple_to_date((
    (2003, 1, 5),
    (2003, 3, 7),
    (2003, 4, 30),
    (2003, 5, 8),
    (2003, 6, 11),
    (2003, 11, 6),
    (2003, 12, 11),
    (2003, 12, 31),
    (2004, 1, 6),
    (2004, 4, 30),
    (2004, 6, 11),
    (2004, 12, 31),
    (2005, 2, 22),
    (2005, 3, 5),
    (2005, 11, 3),
    (2006, 3, 7),
    (2006, 5, 6),
))
u'''
Дни с особенностями
'''

def work_dates_between(start_date, end_date):
    u'''
    Возвращает даты рабочих дней
    '''
    for n in xrange((end_date - start_date).days):
        current_date = start_date + timedelta(n)
        if current_date.weekday() in (5, 6):
            if current_date in work_days:
                yield current_date
        else:
            if current_date not in days_off:
                yield current_date